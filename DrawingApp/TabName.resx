<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bindingSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        3wDU3N8Z1t3f2tXd4P/U3eD/1d7h/9bTzv/Qxbz/urGs/62qqv/V3uH/2eLm/9rj5//Z4+j/jZ22/3qN
        t/99i73/dH+v/3iFsv9teZ3/j6HQ/0pZff9aZ5H/Z3Sk/15sm/9Xapb/VGaE/zRDYP8uPGD/MEBQ/wAA
        AADT3N8A09zfGdPc39rT3N//1N3g/9bf4f+4wMj/bHWO/1Vfe/9QWGr/oaqy/9rk5v/Z4ub/0t3i/3SA
        kv9ld5z/W2qM/0hRY/9IVXr/UF2A/0xYd/8zPlf/PUhn/z9HX/80P1z/N0do/0VVcP8mMED/KDZJ/y8/
        Tv8AAAAAz9jbAM7Y2xnS293a0tve/9Tc3//Y3+L/p7LA/0hXfP9IV3j/QUpp/11jmP/P2OL/2uPm/9Da
        3v9cZ3P/XmyK/2l3mv9eaoj/TFh6/1Refv9NU2r/P0hh/zxHY/9FUG//SVd8/ztLav80Qlf/JC04/yUy
        QP8tPUz/AAAAAMzW2QDN1tkZ0Nnc2tHa3f/S297/09ze/8HK0f9VYp3/M0Cg/ywzpf9GR7n/yNHf/9fh
        5P+Tn6j/P0tg/2x9ov9qeZ3/WGKD/15miv+Klb//n6jU/4KNt/9NWn7/ND5a/zhEYf81RGL/Lz1W/yQw
        Qf8mNEP/Lj9O/wAAAADP2NsA0NncGc/Y29rQ2dz/0Nnd/9Ha3f/S29z/l6DZ/yUu3P8ZHcj/aGvD/9Pd
        4v+gq7H/LTVC/xwjM/9ebY//nbDY/6Gw1v+tuN7/qrbc/6Ov1/+Zp9L/iJrF/3aHsP9jdZv/O0pn/x4m
        NP8cJTH/KTdG/0dZZv8AAAAAz9jbAM7Y2xnO19raz9jb/9DZ3P/Q2dz/0Nnc/9Lb3f96g9v/Sk/J/7e+
        1//T3d7/bXaR/0U/Yv9QSVP/UlNf/4WSsv+jtNj/sL7h/6a22v+fsdf/lKbR/4SZxv91irb/QlN0/xwi
        MP8WGyP/GB8o/yMxP/9hcnz/AAAAAM3W2QDM1tkZzNbZ2s3W2f/O19v/z9jb/87Y2//Q2dz/wcra/7/I
        2f/S293/zdfd/3ly5P9cSfD/ZFLU/2lYrP9wY4//gXqP/5WUo/+Vn7X/lqbI/5Wn0P+Gmsb/an+o/zJD
        Xf8ZHin/Fxwk/x4rOv8kNUb/Pk5f/wAAAADL1NcAy9TXGczV2NrL1dj/zdbZ/83X2v/N1tn/ztfa/87Y
        2v/P2Nv/z9na/8LI4P9qW/r/WUb//1pG//9aR///XEn3/19M3/9mVb3/XEuJ/1pTb/9sbn7/dH6U/1xs
        hv8wPlH/HCYz/x0oNv8uQVP/aXyJ/01jdP8AAAAAyNPWAMfT1RnI09bay9TX/8vU1//M1tn/zdbZ/8zW
        2f/N1tn/ztfa/8/Z2v+7wOH/ZFP8/1lG//9aR///Wkf//1pH//9aR///V0P9/zoY2P8zD73/Ohyh/0Qu
        gf9IO2L/QDxH/zE6Rf8jNET/UmRx/7G9wv+ksrf/AAAAAMXR0wDF0dMZxdHU2sfR1P/I0tX/ydPW/8vU
        1//M1dj/y9XY/8vV2P/M1tj/xM7a/3ht9f9XRP//Wkb//1pH//9aR///W0j//1E69f8zDdT/MAjS/y8I
        0/8wCdH/Mw3H/zkYsf85KIv/NkRb/5akq/++ycz/vsjL/wAAAADCztAAws7QGcXQ09rG0dP/x9HU/8fS
        1f/H0tX/ydPW/8rU1//J1Nf/ydXX/8nW1/+yuOD/d2v2/2FQ/f9cSv7/WUb//1lG//9HKuz/LgbR/y4H
        0f8vB9H/LwjR/zAI0v8uBtT/NxjI/4uTrv/CzM7/wMrN/7zHyv8AAAAAws/RAMLP0RnCz9HaxNDS/8XR
        0//F0dT/x9LV/8bS1f/H09X/x9TW/8bT1f/I1df/yNXX/8LM2v+1ueD/qqvj/5KU3/9oZsT/TDqu/1E6
        yf9NMdD/QyPQ/zoX0P80D9D/OBTR/3dqz//Cy9D/w8zP/8HKzf+/yMv/AAAAAMLP0QDCz9EZwc7R2sHO
        0f/CztH/w8/S/8TQ0//E0dP/xdLU/8TR1P/F0tT/xtPV/8bT1f/H1NX/ytXV/8rV1f/I1dX/sLm5/3Bu
        av+mr7X/ucPS/7G50P+lqc3/nJvP/6Sk0f+9xs//wszO/73IzP+9yMv/wMnM/wAAAADBztAAwc7QEMHO
        0IvAzdCkwMzQosDN0KLCz9Kiws/RosPQ0qLE0dOixdLUosPQ06LE0dSixNHUosfS1aLH0tSixtPVosbR
        1KKDgn+meXdyssPP0aLF0tKix9PSosnT0qLH0dCiv8rNosDKzaK9yMuivMfKor7HyqIAAAAAq7e5AK25
        uwC5xskBxdLVAcbV0wHD0tEBu8fLAay5wQGxv8cBwtLPAbTDxQG9yM4Bsr7GAb7IywHLzs8BzMvQAczV
        2AHW3OABj4eCAkQ5MQWwtLsBydbVAbvMzwHJz9QByNHUAb/FygG/xMoBs8bGAbTDxgG4wsYBAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAA
        AADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAOAA
        AAD////+/////v////7////+
</value>
  </data>
</root>